name: Simple Java CI with Manual Approval

on:
  push:
    branches:
      - main
      - uat
      - dev
  pull_request:
    branches:
      - main
      - uat
      - dev
      
env:
  AZURE_CONTAINER_REGISTRY: acrgagan01
  PROJECT_NAME: mavenproject
  RESOURCE_GROUP: gagan-rg
  CLUSTER_NAME: aks-gagan-learning-001
  REGISTRY_URL: acrgagan01.azurecr.io
jobs:
  build:
    runs-on:
    - self-hosted
    - Linux
    - X64
    - my-machine
    environment:
      name: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Compile and test the project
        run: mvn clean install
      - name: Package the project
        run: mvn package
      - name: Notify build success
        run: echo "Build and package completed!"
      - name: Azure Login
        uses: Azure/login@v2.2.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Docker Login
        run: |
          az acr login --name $(( env.AZURE_CONTAINER_REGISTRY ))
      - name: Build Docker image
        run: |
          docker build -t ${{ env.REGISTRY_URL }}/${{ env.PROJECT_NAME }}:${{ github.sha }} .
          docker push ${{ env.REGISTRY_URL }}/${{ env.PROJECT_NAME }}:${{ github.sha }}
        env:
          DOCKER_HOST: unix:///var/run/docker.sock



  deploy_to_dev:
    runs-on: self-hosted
    environment:
      name: dev
    needs: build
    if: github.ref == 'refs/heads/dev' 

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set AKS Context
        uses: azure/aks-set-context@v4
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: aks-gagan-learning-001
      - name: Deploy to AKS
        uses: Azure/k8s-deploy@v5.0.1
        with:
          namespace: mavenproject
          manifests: |
            deployments/manifest.yml
            deployments/ingress.yml
          images: |
            ${{ env.REGISTRY_URL }}/${{ env.PROJECT_NAME }}:${{ github.sha }}
          imagepullsecrets: |
            ${{ env.PROJECT_NAME }}


  deploy_to_uat:
    runs-on: self-hosted
    environment:
      name: uat
    needs: build
    if: github.ref == 'refs/heads/uat' 

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set AKS Context
        uses: azure/aks-set-context@v4
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: aks-gagan-learning-001
      - name: Deploy to AKS
        uses: Azure/k8s-deploy@v5.0.1
        with:
          namespace: mavenproject
          manifests: |
            deployments/manifest.yml
            deployments/ingress.yml
          images: |
            ${{ env.REGISTRY_URL }}/${{ env.PROJECT_NAME }}:${{ github.sha }}
          imagepullsecrets: |
            ${{ env.PROJECT_NAME }}



  deploy_to_production:
    runs-on: self-hosted
    environment:
      name: production
    needs: build
    if: github.ref == 'refs/heads/main' 

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set AKS Context
        uses: azure/aks-set-context@v4
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: aks-gagan-learning-001
      - name: Deploy to AKS
        uses: Azure/k8s-deploy@v5.0.1
        with:
          namespace: mavenproject
          manifests: |
            deployments/manifest.yml
            deployments/ingress.yml
          images: |
            ${{ env.REGISTRY_URL }}/${{ env.PROJECT_NAME }}:${{ github.sha }}
          imagepullsecrets: |
            ${{ env.PROJECT_NAME }}

